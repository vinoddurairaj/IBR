
	Tue Nov 24 16:06:44 MST 1998 --leo

	installp(8) is the AIX fileset installation tool.  It is used
	directly, or indirectly by smit(8) and the network installation
	tools. 

	the directory mklpp/aixbin contains shell programs that can be 
	used to build base installations of the product run time environment
	components, or to generate base installations of the product 
	documentation filesets, and single file, and maintenance update 
	of either fileset.  the end result of the work the scripts do 
	is a format suitable for CD-ROM installation.

	currently, it isn't tested whether installation can be performed
	with the network installation tools. only smit(8) and installp(8)
	methods are known good...

	the regular contents of aixbin are:

	--------------------------------------------------
	FSETNAM           
		returns an fileset name, according
		to their fileset naming conventions.
		currently, this works out to ftd.rte 

	FTDREV
		returns fulltime's revision name for
		the current release. fulltime uses
		a two part convention V.R, aix requires
		more elaboration, as explained below.

	FXID
		returns a 9 char string to use for AIX's
		release naming convention `fix id' part.

	FXLVL
		returns a 2 digit code to use for AIX's
		release naming convention `fix level' part.

	LPP_NAME.tmpl
		boiler plate pattern file, used with sed(1)
		mapping functions in the production of the
		fileset lpp_name file.

	MODLVL
		returns a 4 digit code to use for AIX's
		release naming convention `modification level'
		part.

	PKGDESC
		returns a package description string to use 
		in production of the fileset lpp_name file.
		
	PKGNAM
		returns a string for use as the package name.
		equivalent to the product ${Q} macro.

	PRODUCT
		returns a string for use as the product name.
		equivalent to the product ${Q} macro.

	RELLVL
		returns a 2 digit code to use for AIX's
		release naming convention `release level'
		part.

	ROOT.liblpp.a.d
		scratch directory for creating fileset root part
		liblpp.a archives.

	USR.liblpp.a.d
		scratch directory for creating fileset usr part
		liblpp.a archives.

	VERSLVL
		returns a 2 digit code to use for AIX's
		release naming convention `version level'
		part.
		
	mkbaserel.sh
		script to invoke, in its directory, after a product 
		build to produce installation images, and CD-ROM
		distribution format.

		mkbaserel.sh depends on the contents of the 
		pkginst prototype.src file to determine what 
		to load into a release tree that it builds in
		the course of its work.

		because of AIX doesn't conform to pkginst, and has
		nothing like `opt' directories rooted in the different
		system partitions, work has to done to find the 
		minimal set of roots that  pkginst uses to restore 
		the product to during an install. during processing, 
		these roots are converted to symbolic tags with 
		sed(1) mapping functions. these tags are later used
		to resolve which part of the installation fileset
		to place files in. these tags are later converted
		with yet another sed(1) mapping function to names
		appropriate to the fileset installation control
		files that include them.

		the fileset installation control files also require
		metadata, used during installp processing to verify
		the correctness of an installation. this metadata is
		collected and used in the production of application
		and inventory list control files.

		a graph of the build area is made for comparison
		with the content of the prototype.src pkginst 
		inventory file. the graph is searched for each 
		prototype file, first by basename. the results
		of this search are either exactly enough, too
		much, or no success. a one-to-one match is assumed
		to represent the source for the prototype file.
		an ambiguous one-to-many match is resolved by
		requiring a match of both basename and parent
		directory basename. misses must be resolved by hand
		crafted methods, added to the script.
		a warning is given for all such ambiguities or 
		misses. 

		during processing, each prototype file matched to 
		a source file in the build area is mapped.
		this map is used to populate the release tree.
		at this time, warnings are produced about zero-length
		files copied into the release tree.

		fileset installation control files are then loaded 
		where appropriate into the release tree. a backup
		image of the release tree is made, it is copied into
		its expected location in the CD-ROM distribution
		area, and a table of contents file is produced.

	mkinvent.sh
		script used in support of mkbaserel.sh.

	mklpp_name.sh
		script used in support of mkbaserel.sh.

	mksizeinfo.sh
		script used in support of mkbaserel.sh.

	here is the layout of the release and distribution trees:

	installp/mklpp/rel:
		dist
		imgs
		root

	installp/mklpp/rel/dist:
		CD-ROM

		CD-ROM corresponds to the root of the CD-ROM
		distribution.

	installp/mklpp/rel/imgs:

		is where the backup(1) format image of the 
		installation fileset is placed.


	installp/mklpp/rel/root:

		corresponds to the root of the releaes tree.

	to install using smit(8), change directories to the 
	installp/mklpp/rel/imgs, and invoke smit. specify
	'.' as the input device. agree with all of its
	advice. 

	to install from the backup(1) format image, get privileged,
	change directory to installp/mklpp/rel/imgs and type:

	# installp -a -V 4 -e ./log -d . ftd.rte

		-a means `apply'
		-V 4 means be vociferous
		-e means tee installp's output ./log
		-d means look for installation filesets in this directory

	to un-install, type:

	# installp -u ftd.rte

	here is sample installp output:

# installp -a -V 4 -e ./log -d . ftd.rte   
+-----------------------------------------------------------------------------+
		    Pre-installation Verification...
+-----------------------------------------------------------------------------+
done
SUCCESSES
---------
  Filesets listed in this section passed pre-installation verification
  and will be installed.
    -- Filesets are listed in the order in which they will be installed.
    -- The reason for installing each fileset is indicated with a keyword
       in parentheses and explained by a "Success Key" following this list.
    -- If a fileset has requisites they are listed (indented)
       beneath the fileset.

  ftd.rte 4.0.0.1 (Selected)
    FullTime Data for Unix 


  Success Key:
  Selected    -- Explicitly selected by user for installation.
  Maintenance -- Maintenance Level fileset update; being installed
                 automatically to enable the level of the system to be
                 tracked.
  Mandatory   -- Considered to be important to the system; will always
                 be installed when detected on the installation media.
  Requisite   -- Requisite of other filesets being installed.
  P_Requisite -- Previously installed fileset's requisite; being installed
                 automatically now to ensure system's consistency.  (Only
                 installed automatically when "auto-install" (-g flag)
                 is specified.)
  Supersedes  -- Superseding fileset update; not selected, chosen instead
                 of an older, selected update.  (Only chosen in this fashion
                 when "auto-install" is specified (-g flag)).

  << End of Success Section >>

FILESET STATISTICS 
------------------
    1  Selected to be installed, of which:
        1  Passed pre-installation verification
  ----
    1  Total to be installed

+-----------------------------------------------------------------------------+
			 Installing Software...
+-----------------------------------------------------------------------------+

installp:  APPLYING software for:
	ftd.rte 4.0.0.1

Finished processing all filesets.  (Total time:  51 secs).

+-----------------------------------------------------------------------------+
				Summaries:
+-----------------------------------------------------------------------------+

Installation Summary
--------------------
Name                        Level           Part        Event       Result
-------------------------------------------------------------------------------
ftd.rte                     4.0.0.1         USR         APPLY       SUCCESS    
ftd.rte                     4.0.0.1         ROOT        APPLY       SUCCESS    
