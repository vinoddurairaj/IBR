These are all of the functions called by CLIs and MasterThread which will need IOCTLs to replace them.

ftd_ioctl_clear_lrdbs
ftd_ioctl_clear_hrdbs
ftd_ioctl_clear_bab
ftd_ioctl_get_bab_size
ftd_ioctl_set_group_state
IOCTL_GET_LG_STATE_BUFFER
ftd_ioctl_get_group_stats
ftd_ioctl_get_dev_stats
ftd_ioctl_send_lg_message

ftd_ioctl_new_lg


ftd_lg_set_driver_run_state

ps_get_group_info
ps_set_group_state
ps_get_version_1_attr
ftd_lg_set_pstore_run_state
ps_set_group_key_value
ps_set_group_checkpoint

sftk_lg_add_connections


// need this information in one IOCTL
* In the old pstore (group_info.state_stamp == LG_ACTIVE) checks to see if the group was ACTIVE previously. What is the equivalent in the new pstore/driver? I would like to have an IOCTL that indicates this.
* Need IOCTL that returns pstate = ftd_lg_get_pstore_run_state( lgp.lgnum, lgp.cfgp ) like FTD_SNORMAL

// tell driver to set CP on. this sets check point on in the pStore!!!  ftd_lg_cpon(lgp)

//Commands sent to PMD need IOCTLS.
FTDCCPSTARTP - check point start primary
FTDCCPSTOPP - Check point Stop primary
FTDCSTARTPMD - Start PMD this is where the master thread would create the PMD thread. Sent by the CLI launch.
FTDCREMWAKEUP - this is where the master thread would create the PMD thread - this command is sent by the RMDs to ensure the PMDs are running. It also looks at the pstore to set the running state( the new driver can do that).


