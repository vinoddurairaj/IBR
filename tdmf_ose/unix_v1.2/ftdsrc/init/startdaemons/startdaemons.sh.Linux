#!/bin/sh
# LICENSED MATERIALS / PROPERTY OF IBM
# %PRODUCTNAME% version %VERSION%
# (c) Copyright %COMPANYNAME%  %COPYRIGHTYEAR 2001%.  All Rights Reserved.
# The source code for this program is not published or otherwise
# divested of its trade secrets, irrespective of what has been
# deposited with the U.S. Copyright Office.
# US Government Users Restricted Rights - Use, duplication or
# disclosure restricted by GSA ADP Schedule Contract with %COMPANYNAME%
#
#
# This script will start the daemons for the %PRODUCTNAME%
# product.  The RMD performs two tasks:  its primary task is to move
# data from the network to a mirror disk.  Its other task is to provide
# useful information to the gui tools.
#
# Generally, this should run in init mode 2-5 (in the /etc/rc[2-5].d directory),
# but can be moved, if needed in a local installation, to other places after
# the network has started.  It must start after %PKGNM%-scan.
#
# exit values: 0 (OK), 1 (FAIL), and 2 (N/A)
#
# %PKGNM% Daemons Script

# chkconfig: 2345 25 87
# description: %PKGNM% Daemons Script

# /etc/init.d/%PKGNM%-startdaemons

### BEGIN INIT INFO
# Provides:       %PKGNM%-startdaemons
# Required-Start: $network $syslog
# Should-Start: $portmap %PKGNM%-chkpt_boot
# Required-Stop: 
# Should-Stop:  $network $syslog
%ifdistribution == redhat
# Default-Start:  2 3 4 5
%endif
%ifdistribution == suse
# Default-Start:  2 3 5
%endif
# Default-Stop:
# Description:    %COMPANYNAME2% %PRODUCTNAME% Daemons Script
### END INIT INFO

PATH="/sbin:/bin:/usr/sbin:/usr/bin:$PATH"
export PATH

case "$1" in
'start')		
    /bin/echo "Starting %COMPANYNAME2% %PRODUCTNAME% daemons"
    ulimit -c unlimited

    IsRHEL7=0
    IsSuSE12=0
    if /bin/fgrep -q 'release 7' /etc/redhat-release 2> /dev/null
    then
        IsRHEL7=1
    fi
    if /bin/fgrep -q 'SUSE Linux Enterprise Server 12' /etc/SuSE-release 2> /dev/null
    then
        IsSuSE12=1
    fi

    # Check if we must restore the network configuration files and hostname (case of switch over to a new boot drive
    # migrated from another server). Note: this is attempted also at an earlier stage of the boot sequence,
    # in SFTKdtc-scan (loading our driver); if we get here and the flag file still exists, it is because the
    # previous attempt failed, and thus we retry here.
    restart_network_services=0
    if [ -e /boot/SFTKdtc_restore_net_config_files ]
	then
        /bin/echo "Restoring network configuration files after migrated boot drive switch over..."
        /bin/mv /etc/hosts /etc/SFTKdtc_migrated_hosts_file
        /bin/cp -p /boot/backup_original_target_net_config_files/hosts /etc/hosts
        result1=$?
        /bin/mv /etc/sysconfig/network /etc/sysconfig/SFTKdtc_migrated_network_file
        /bin/cp -p /boot/backup_original_target_net_config_files/network /etc/sysconfig/.
        result2=$?
        if [ $IsRHEL7 -eq 0 ]
        then
            /bin/mv /etc/sysconfig/network-scripts/ifcfg-eth0 /etc/sysconfig/network-scripts/SFTKdtc_migrated_ifcfg-eth0_file
            /bin/cp -p /boot/backup_original_target_net_config_files/ifcfg-eth0 /etc/sysconfig/network-scripts/.
            result3=$?
        else
            /bin/mkdir /etc/SFTKdtc_migrated_network_scripts 1> /dev/null 2>&1
            /bin/mv /etc/sysconfig/network-scripts/* /etc/SFTKdtc_migrated_network_scripts/.
            /bin/cp -p --dereference --preserve=links /SFTKdtc_migrated_bootvol_mntpoint/backup_original_target_net_config_files/network-scripts/* /etc/sysconfig/network-scripts/.
            result3=$?
        fi
        # Make sure the writing is physically done
        /bin/sync
        /bin/sleep 5
        if [ $result1 -eq 0 -a $result2 -eq 0 -a $result3 -eq 0 ]
        then
            if [ $IsRHEL7 -eq 0 ]
            then
                /bin/echo "Restored /etc/hosts, /etc/sysconfig/network and /etc/sysconfig/network-scripts/ifcfg-eth0."
            else
                /bin/echo "Restored /etc/hosts, /etc/sysconfig/network and /etc/sysconfig/network-scripts."
            fi
        else
            if [ $IsRHEL7 -eq 0 ]
            then
                /bin/echo "Failed restoring /etc/hosts, /etc/sysconfig/network and /etc/sysconfig/network-scripts/ifcfg-eth0."
            else
                /bin/echo "Failed restoring /etc/hosts, /etc/sysconfig/network and /etc/sysconfig/network-scripts."
            fi
            /bin/echo "Please verify the related network parameters manually after reboot is complete."
        fi

        if [ -e /boot/backup_original_target_net_config_files/hostname_restore.txt ]
        then
            current_hostname=`bin/hostname | awk '{print $1}'`
            hostname_to_restore=`/bin/cat /boot/backup_original_target_net_config_files/hostname_restore.txt | awk '{print $1}'`
            /bin/hostname $hostname_to_restore
            result4=$?
            if [ $result4 -eq 0 ]
            then
                /bin/echo "Restored hostname to $hostname_to_restore."
            else
                /bin/echo "Failed restoring hostname to $hostname_to_restore; status = $result4. Putting back previous hostname: $current_hostname"
                /bin/echo "Please set the hostname manually after reboot is complete and make it active."
                /bin/hostname $current_hostname
            fi
        fi
        # Remove the restore flag (marker flag)
        /bin/rm -f /boot/SFTKdtc_restore_net_config_files
        
        # If all went well, set the flag to restart the network services 
        if [ $result1 -eq 0 -a $result2 -eq 0 -a $result3 -eq 0 -a $result4 -eq 0 ]
        then
            restart_network_services=1
        fi
	fi

    # Check if the flag is set for verification that ifcfg-eth0 has not been lost after restore by SFTKdtc-scan script.
    # A problem is known in certain Linux releases where ifcfg-eht0 is replaced by a .bak by other OS scripts
    # (problem documented on Linux for which there are patches in RH 5.6,
    # (running between SFTKdtc-scan and this script here); discussion example: https://bugzilla.redhat.com/show_bug.cgi?id=253146).
    if [ -f /boot/SFTKdtc_check_ifcfg_eth0_restored_file ]
    then
        if [ ! -f /etc/sysconfig/network-scripts/ifcfg-eth0 ]
        then
            # The file we have restored is gone; copy it back
            /bin/echo "/etc/sysconfig/network-scripts/ifcfg-eth0 not found. Restoring it..."
            /bin/cp -p /boot/backup_original_target_net_config_files/ifcfg-eth0 /etc/sysconfig/network-scripts/ifcfg-eth0
            restart_network_services=1
        fi
        /bin/rm -f /boot/SFTKdtc_check_ifcfg_eth0_restored_file
    fi 

    if [ $restart_network_services -eq 1 ]
    then
        if [ $IsRHEL7 -eq 0 ]
        then
            if [ -e /etc/init.d/network ]
	        then
                /bin/echo "Restarting network services..."
                /etc/init.d/network restart
            else
                if [ -e /etc/init.d/networking ]
	            then
                    /bin/echo "Restarting network services..."
                    /etc/init.d/networking restart
                else
                    /bin/echo "Did not find the executable to restart network services. Please manually restart services or reboot."
                fi
            fi
        else
            # RHEL 7
            /usr/bin/systemctl restart network
        fi
    fi

    # Check if SFTKdtc services are disabled
    if [ -e /etc/opt/SFTKdtc/SFTKdtc_services_disabled ]
	then
        /bin/echo "Not starting the %COMPANYNAME2% %PRODUCTNAME% daemons because SFTKdtc services are disabled"
        /bin/echo "    (presence of file /etc/opt/SFTKdtc/SFTKdtc_services_disabled has been detected)."
        exit 0
	fi

    # On RHEL 7 and SuSE 12.x, SFTKdtc-scan start is registered as a service and called by the system.
    if [ $IsRHEL7 -eq 0 -a $IsSuSE12 -eq 0 ]
    then
        /etc/init.d/%PKGNM%-scan start
    fi
    # Start the PMDs
    # Check if /var/run/%PKGNM% directory exists (on RHEL 7, it apparently gets removed across a reboot, not on RHEL6)
    if [ ! -d /var/run/%PKGNM% ]
	then
        /bin/echo "Directory /var/run/%PKGNM% not found; creating it."
        /bin/mkdir /var/run/%PKGNM%
    fi
    # On RHEL7 and SuSE 12.x, in.dtc and the PMDs are started by service files, not by startdaemons, because they would get terminated
    # when startdaemons exit; so we start them here only on older RHEL and SuSE releases.
    if [ $IsRHEL7 -eq 0 -a $IsSuSE12 -eq 0 ]
    then
        cd /var/run/%PKGNM%
        /usr/bin/nohup /%FTDBINDIR%/in.%Q% ${LOGOPT} >/tmp/in.%Q%.log 2>&1 &
        /bin/sleep 5
        /usr/bin/nohup /%FTDBINDIR%/launchpmds >/tmp/in.pmd.log 2>&1 &
    fi
%ifdistribution == redhat
        if [ -d /var/lock/subsys ] ; then
            touch /var/lock/subsys/%PKGNM%-startdaemons
        fi
%endif
    ;;
'stop')
    # Issue two syncs because second only starts when first finishes
    /bin/sync;/bin/sync
    /bin/echo "Stopping %COMPANYNAME2% %PRODUCTNAME% daemons"
    ulimit -c unlimited
    /%FTDBINDIR%/kill%Q%master
    /bin/sync;/bin/sync
%ifdistribution == redhat
        if [ -e /var/lock/subsys/%PKGNM%-startdaemons ] ; then
            rm /var/lock/subsys/%PKGNM%-startdaemons
        fi
%endif
    ;;
*)
    echo "Usage: $0 { start | stop }"
    exit 1
    ;;
esac

exit 0
